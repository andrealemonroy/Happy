{"remainingRequest":"/Users/Happy/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Happy/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Happy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Happy/src/views/address.vue?vue&type=template&id=4f039e6c&","dependencies":[{"path":"/Users/Happy/src/views/address.vue","mtime":1579553909073},{"path":"/Users/Happy/node_modules/cache-loader/dist/cjs.js","mtime":1575991294243},{"path":"/Users/Happy/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1576527882455},{"path":"/Users/Happy/node_modules/cache-loader/dist/cjs.js","mtime":1575991294243},{"path":"/Users/Happy/node_modules/vue-loader/lib/index.js","mtime":1576527882455}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}